<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ocloudwork</groupId>
	<artifactId>springDemo</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>

	<name>springDemo</name>
	<url>http://www.ocloudwork.com</url>
	<description> A spring demo project.</description>

	<!-- 描述了这个项目构建环境中的前提条件。 -->
	<prerequisites>
		<!-- 构建该项目或使用该插件所需要的Maven的最低版本 -->
		<maven>3.6.0</maven>
	</prerequisites>

	<!-- 项目的问题管理系统(Bugzilla(开源), Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 Bugzilla -->
	<issueManagement>
		<!-- 问题管理系统（例如Bugzilla）的名字， -->
		<system>Bugzilla</system>
		<!-- 该项目使用的问题管理系统的URL -->
		<url>http://www.ocloudwork.com/bugzilla</url>
	</issueManagement>

	<!-- 项目持续集成信息 -->
	<ciManagement>
		<!-- 持续集成系统的名字，例如continuum -->
		<system>jenkins</system>
		<!-- 该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。 -->
		<url>http://www.ocloudwork.com/jenkins</url>
		<!-- 构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告） -->
		<notifiers>
			<!-- 配置一种方式，当构建中断时，以该方式通知用户/开发者 -->
			<notifier>
				<!-- 传送通知的途径 -->
				<type>mail</type>
				<!-- 发生错误时是否通知 -->
				<sendOnError>true</sendOnError>
				<!-- 构建失败时是否通知 -->
				<sendOnFailure>true</sendOnFailure>
				<!-- 构建成功时是否通知 -->
				<sendOnSuccess>true</sendOnSuccess>
				<!-- 发生警告时是否通知 -->
				<sendOnWarning>true</sendOnWarning>
				<!-- 不赞成使用。通知发送到哪里 -->
				<address>342015908@qq.com</address>
			</notifier>
		</notifiers>
	</ciManagement>
	<inceptionYear>2018</inceptionYear>
	<!-- 项目相关邮件列表信息 -->
	<mailingLists>
		<!-- 该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。 -->
		<mailingList>
			<!-- 邮件的名称 -->
			<name>test</name>
			<!-- 发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 -->
			<post>342015908@qq.com</post>
			<!-- 订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 -->
			<subscribe>342015908@qq.com</subscribe>
			<!-- 取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 -->
			<unsubscribe>342015908@qq.com</unsubscribe>
			<!-- 你可以浏览邮件信息的URL -->
			<archive>http://www.ocloudwork.com/mail</archive>
		</mailingList>
	</mailingLists>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<checkstyle.config.location>full_checkstyle.xml</checkstyle.config.location>
		<!-- 自定义默认的时间格式 年-月-日-时-分 -->
		<maven.build.timestamp.format>yyyy-MM-dd_HH_mm_ss</maven.build.timestamp.format>

		<spring.version>4.3.24.RELEASE</spring.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.11.21.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.3.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>5.3.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>3.0.11.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>3.0.11.RELEASE</version>
		</dependency>
		<!-- spring end -->
		<dependency>
			<groupId>org.modelmapper.extensions</groupId>
			<artifactId>modelmapper-spring</artifactId>
			<version>2.3.3</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.8</version>
		</dependency>
		<!-- 比JDK自带XML实现更高效的类库 https://mvnrepository.com/artifact/com.fasterxml.woodstox/woodstox-core -->
		<dependency>
			<groupId>com.fasterxml.woodstox</groupId>
			<artifactId>woodstox-core</artifactId>
			<version>5.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.9.8</version>
		</dependency>
		<!-- druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.16</version>
		</dependency>
		<!-- JDBC MySQL Driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- 代码生成器依赖 -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.28</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.0-jre</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.8</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>tomcat8-plugin</id>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<finalName>${project.artifactId}-${maven.build.timestamp}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat8-maven-plugin</artifactId>
				<version>3.0-r1756463</version>
				<configuration>
					<path>/springDemo</path>
					<port>8888</port>
					<url>http://localhost:8080/springDemo</url>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
			</plugin>
			<!-- embedded Jetty server, for testing -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.19.v20190610</version>
				<configuration>
					<!-- 扫描进行热部署的间隔时间,单位s -->
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/springDemo</contextPath>
					</webApp>
					<httpConnector>
						<port>8888</port>
						<host>localhost</host>
					</httpConnector>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- 项目总报告 运行：mvn project-info-reports:dependencies 依赖报告(target/site/dependencies.html) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<!-- 编码规约扫描命令： mvn pmd:pmd 报告(target/site/pmd.html) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.12.0</version>
				<configuration>
					<rulesets>
						<ruleset>rulesets/java/ali-comment.xml</ruleset>
						<ruleset>rulesets/java/ali-concurrent.xml</ruleset>
						<ruleset>rulesets/java/ali-constant.xml</ruleset>
						<ruleset>rulesets/java/ali-exception.xml</ruleset>
						<ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
						<ruleset>rulesets/java/ali-naming.xml</ruleset>
						<ruleset>rulesets/java/ali-oop.xml</ruleset>
						<ruleset>rulesets/java/ali-orm.xml</ruleset>
						<ruleset>rulesets/java/ali-other.xml</ruleset>
						<ruleset>rulesets/java/ali-set.xml</ruleset>
					</rulesets>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<targetJdk>${java.version}</targetJdk>
					<printFailingErrors>true</printFailingErrors>
				</configuration>
				<executions>
					<!-- 绑定pmd:check到verify生命周期 -->
					<execution>
						<id>pmd-check-verify</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
					<!-- 绑定pmd:pmd到site生命周期 -->
					<execution>
						<id>pmd-pmd-site</id>
						<phase>site</phase>
						<goals>
							<goal>pmd</goal>
						</goals>
					</execution>
				</executions>
				<!-- p3c依赖 -->
				<dependencies>
					<dependency>
						<groupId>com.alibaba.p3c</groupId>
						<artifactId>p3c-pmd</artifactId>
						<version>2.0.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
	<!-- 用于生成错误到代码内容的链接 -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<!-- 检测代码风格的插件 checkstyle（要在项目根目录下配置规则文件checkstyle.xml），然后使用mvn checkstyle:checkstyle命令生成报告 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<!-- findbugs插件 ：静态检查代码的错误 mvn findbugs:check mvn findbugs:gui -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.5</version>
				<configuration>
					<!-- 设置分析工作的等级，可以为Min、Default和Max -->
					<effort>Low</effort>
					<!-- Low、Medium和High (Low最严格) -->
					<threshold>Medium</threshold>
					<failOnError>true</failOnError>
					<includeTests>true</includeTests>
					<!--findbugs需要忽略的错误的配置文件 -->
					<!-- <excludeFilterFile>compile.bat</excludeFilterFile> -->
				</configuration>
			</plugin>
			<!--检测代码覆盖率的插件 jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.4</version>
				<!-- Configuration 里面写配置信息 -->
				<configuration>
					<!-- rules里面指定覆盖规则 -->
					<rules>
						<rule implementation="org.jacoco.maven.RuleConfiguration">
							<element>BUNDLE</element>
							<limits>
								<!-- 指定方法覆盖到80% -->
								<limit implementation="org.jacoco.report.check.Limit">
									<counter>METHOD</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.50</minimum>  <!--注意：这里的数值都是百分比，只能写0-1之间的值，例如：0.8 -->
								</limit>
								<!-- 指定指令覆盖到40% -->
								<limit implementation="org.jacoco.report.check.Limit">
									<counter>INSTRUCTION</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.40</minimum>
								</limit>
								<!-- 指定行覆盖到40% -->
								<limit implementation="org.jacoco.report.check.Limit">
									<counter>LINE</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.40</minimum>
								</limit>
								<!-- 指定类覆盖到100%，不能遗失任何类 -->
								<limit implementation="org.jacoco.report.check.Limit">
									<counter>CLASS</counter>
									<value>MISSEDCOUNT</value>
									<maximum>0</maximum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
