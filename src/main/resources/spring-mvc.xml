<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    	">

	<!-- 自动扫描base-package对应的路径或者该路径的子包下面的java文件，如果扫描到文件中带有@Service,@Component,@Repository,@Controller等这些spring注解的类，则把这些类注册为spring 
		bean -->
	<context:component-scan
		base-package="com.ocloudwork.spring.demo" />
    <!-- 默认servlet -->
    <mvc:default-servlet-handler />
    <!-- 启动对@AspectJ（面向切面）注解的支持 -->
    <aop:aspectj-autoproxy />
	<!-- 配置自定义转换服务器,启用注解驱动 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>
	 <!--
        Setup a simple strategy: 
           1. Take all the defaults.
           2. Return json by default when not sure. 
       
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="application/json" />
	</bean>-->
	<mvc:annotation-driven
		conversion-service="conversionService" >
		<!-- 字符串转换器 -->
		<mvc:message-converters
			register-defaults="true">
			<bean id="messageConverter"
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean id="jsonHttpMesaageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
		<!-- 集合参数解析器 -->
		<!--<mvc:argument-resolvers> -->
		<!--</mvc:argument-resolvers> -->
	</mvc:annotation-driven>
	
	<!-- 引入属性文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:druid.properties</value>
            </list>
        </property>
    </bean>
	 <!-- 配置国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n" />
    </bean>

	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />

	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>

	<!-- 模板解析器 -->
	<bean id="templateResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML" />
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="templateEngine"
		class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" /><!-- 中文乱码问题 -->
	</bean>
	<!-- 定义一个View的bean并设置一些静态变量 -->
	<bean name="main" class="org.thymeleaf.spring4.view.ThymeleafView">
		<property name="staticVariables">
			<map>
				<entry key="footer" value="foot信息" />
			</map>
		</property>
	</bean>

	<!-- 配置上传文件所需的解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<import resource="classpath:spring-websocket.xml"/>
</beans>
