<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    	">

    <!-- 自动扫描base-package对应的路径或者该路径的子包下面的java文件，如果扫描到文件中带有@Service,@Component,@Repository,@Controller等这些spring注解的类，则把这些类注册为spring bean -->
    <context:component-scan base-package="com.ocloudwork.spring.demo"/>
    <mvc:annotation-driven  />
    <!-- <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/demo/**" location="/demo/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" /> -->
    
    <!-- 完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    </bean>
    <bean
            class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    </bean>

    <!-- web请求的拦截器
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/register"/>
            <mvc:exclude-mapping path="/test/*"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/findPwd"/>
            <mvc:exclude-mapping path="/getTRegion"/>
            <mvc:exclude-mapping path="/getIndustry"/>
            <mvc:exclude-mapping path="/getTRegionByParentId"/>
            <mvc:exclude-mapping path="/getMessageCode"/>
            <mvc:exclude-mapping path="/listRecommend"/>
            <mvc:exclude-mapping path="/news/getNewsDetail"/>
            <mvc:exclude-mapping path="/css/ceos.css"/>
            <bean class="cn.kiiwii.framework.interceptor.MyInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    -->


	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                   <ref bean="mappingJacksonHttpMessageConverter" />  
            </list>  
        </property>  
    </bean>  
            
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
         <property name = "supportedMediaTypes">  
              <list>  
                <bean class="org.springframework.http.MediaType">  
                 <constructor-arg index="0" value="text"/>  
                 <constructor-arg index="1" value="plain"/>  
                 <constructor-arg index="2" value="UTF-8"/>  
                </bean>  
                <bean class="org.springframework.http.MediaType">  
                 <constructor-arg index="0" value="*"/>  
                 <constructor-arg index="1" value="*"/>  
                 <constructor-arg index="2" value="UTF-8"/>  
                </bean>  
                <bean class="org.springframework.http.MediaType">  
                 <constructor-arg index="0" value="text"/>  
                 <constructor-arg index="1" value="*"/>  
                 <constructor-arg index="2" value="UTF-8"/>  
                </bean>  
                 <bean class="org.springframework.http.MediaType">  
                 <constructor-arg index="0" value="application"/>  
                 <constructor-arg index="1" value="json"/>  
                 <constructor-arg index="2" value="UTF-8"/>  
                </bean>  
              </list>  
        </property>  
    </bean>   

    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
</beans>
